docker exec -it odoo-stack bash
odoo shell

exit()

$ python odoo-bin -d odoo --addons-path=extra_addons --load=web 

owner_model = env['pharmacy.owner']
new_owner = owner_model.create_owner('John Doe', 'john.doe@example.com', 'securepassword')
print(new_owner)

updated_owner = owner_model.update_owner(new_owner.id, address='123 Main St', phone='555-1234')
print(updated_owner)

success = owner_model.delete_owner(new_owner.id)
print(success)

success = owner_model.check_required_information()
print(success)



client_model = env['pharmacy.client']
new_client = client_model.create_client('John Doe', 'john.doe@example.com', 'securepassword', 12.34, 56.78)
print(new_client)

updated_client = client_model.update_client(new_client.id, address='123 Main St', phone='555-1234')
print(updated_client)

success = client_model.delete_client(new_client.id)
print(success)

localization = client_model.access_localization()
print(localization)



medicine_model = env['pharmacy.medicine']
new_medicine = medicine_model.create_medicine('Aspirin', forme='Tablet', presentation='20mg', composition='Acetylsalicylic acid', dosage='1 tablet daily')
print(new_medicine)

updated_medicine = medicine_model.update_medicine(new_medicine.id, dosage='2 tablets daily', address='New Address')
print(updated_medicine)

success = medicine_model.delete_medicine(new_medicine.id)
print(success)



pharmacy = env['pharmacy.pharmacy'].create_pharmacy(
    name='Pharmacy A',
    country='USA',
    city='New York',
    longitude=-73.935242,
    latitude=40.730610,
    phone='555-1234',
    description='Best Pharmacy',
    documentations=[(6, 0, [doc_id])],
    owner_id=1  # Assuming owner with ID 1 exists
)

updated_pharmacy = env['pharmacy.pharmacy'].update_pharmacy(
    pharmacy.id,
    phone='555-5678',
    description='Updated Pharmacy',
    owner_id=2  # Assuming owner with ID 2 exists
)

success = env['pharmacy.pharmacy'].delete_pharmacy(pharmacy.id)





reservation_model = env['pharmacy.reservation']
new_reservation = reservation_model.create_reservation(client_id=1, stock_id=1, quantity=5, price=50.0, message="Test Reservation")
print(new_reservation)

updated_reservation = reservation_model.update_reservation(new_reservation.id, quantity=10, price=100.0, state='available')
print(updated_reservation)

success = reservation_model.delete_reservation(new_reservation.id)
print(success)



stock_model = env['pharmacy.stock']
new_stock = stock_model.create_stock(pharmacy_id=1, medicine_id=1, price=10.0, quantity=100)
print(new_stock)

updated_stock = stock_model.update_stock(new_stock.id, price=12.0, quantity=150)
print(updated_stock)

success = stock_model.delete_stock(new_stock.id)
print(success)


















































































